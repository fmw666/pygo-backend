# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import brand_pb2 as brand__pb2
from . import category_pb2 as category__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class BrandStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.BrandList = channel.unary_unary(
                '/Brand/BrandList',
                request_serializer=brand__pb2.BrandFilterRequest.SerializeToString,
                response_deserializer=brand__pb2.BrandListResponse.FromString,
                )
        self.CreateBrand = channel.unary_unary(
                '/Brand/CreateBrand',
                request_serializer=brand__pb2.BrandRequest.SerializeToString,
                response_deserializer=brand__pb2.BrandInfoResponse.FromString,
                )
        self.DeleteBrand = channel.unary_unary(
                '/Brand/DeleteBrand',
                request_serializer=brand__pb2.BrandRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.UpdateBrand = channel.unary_unary(
                '/Brand/UpdateBrand',
                request_serializer=brand__pb2.BrandRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.CategoryBrandList = channel.unary_unary(
                '/Brand/CategoryBrandList',
                request_serializer=brand__pb2.CategoryBrandFilterRequest.SerializeToString,
                response_deserializer=brand__pb2.CategoryBrandListResponse.FromString,
                )
        self.GetCategoryBrandList = channel.unary_unary(
                '/Brand/GetCategoryBrandList',
                request_serializer=category__pb2.CategoryInfoRequest.SerializeToString,
                response_deserializer=brand__pb2.BrandListResponse.FromString,
                )
        self.CreateCategoryBrand = channel.unary_unary(
                '/Brand/CreateCategoryBrand',
                request_serializer=brand__pb2.CategoryBrandRequest.SerializeToString,
                response_deserializer=brand__pb2.CategoryBrandResponse.FromString,
                )
        self.DeleteCategoryBrand = channel.unary_unary(
                '/Brand/DeleteCategoryBrand',
                request_serializer=brand__pb2.CategoryBrandRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.UpdateCategoryBrand = channel.unary_unary(
                '/Brand/UpdateCategoryBrand',
                request_serializer=brand__pb2.CategoryBrandRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class BrandServicer(object):
    """Missing associated documentation comment in .proto file."""

    def BrandList(self, request, context):
        """品牌接口
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateBrand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteBrand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBrand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CategoryBrandList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCategoryBrandList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCategoryBrand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCategoryBrand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCategoryBrand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BrandServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'BrandList': grpc.unary_unary_rpc_method_handler(
                    servicer.BrandList,
                    request_deserializer=brand__pb2.BrandFilterRequest.FromString,
                    response_serializer=brand__pb2.BrandListResponse.SerializeToString,
            ),
            'CreateBrand': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateBrand,
                    request_deserializer=brand__pb2.BrandRequest.FromString,
                    response_serializer=brand__pb2.BrandInfoResponse.SerializeToString,
            ),
            'DeleteBrand': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteBrand,
                    request_deserializer=brand__pb2.BrandRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'UpdateBrand': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBrand,
                    request_deserializer=brand__pb2.BrandRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'CategoryBrandList': grpc.unary_unary_rpc_method_handler(
                    servicer.CategoryBrandList,
                    request_deserializer=brand__pb2.CategoryBrandFilterRequest.FromString,
                    response_serializer=brand__pb2.CategoryBrandListResponse.SerializeToString,
            ),
            'GetCategoryBrandList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCategoryBrandList,
                    request_deserializer=category__pb2.CategoryInfoRequest.FromString,
                    response_serializer=brand__pb2.BrandListResponse.SerializeToString,
            ),
            'CreateCategoryBrand': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCategoryBrand,
                    request_deserializer=brand__pb2.CategoryBrandRequest.FromString,
                    response_serializer=brand__pb2.CategoryBrandResponse.SerializeToString,
            ),
            'DeleteCategoryBrand': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCategoryBrand,
                    request_deserializer=brand__pb2.CategoryBrandRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'UpdateCategoryBrand': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCategoryBrand,
                    request_deserializer=brand__pb2.CategoryBrandRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Brand', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Brand(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def BrandList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Brand/BrandList',
            brand__pb2.BrandFilterRequest.SerializeToString,
            brand__pb2.BrandListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateBrand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Brand/CreateBrand',
            brand__pb2.BrandRequest.SerializeToString,
            brand__pb2.BrandInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteBrand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Brand/DeleteBrand',
            brand__pb2.BrandRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateBrand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Brand/UpdateBrand',
            brand__pb2.BrandRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CategoryBrandList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Brand/CategoryBrandList',
            brand__pb2.CategoryBrandFilterRequest.SerializeToString,
            brand__pb2.CategoryBrandListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCategoryBrandList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Brand/GetCategoryBrandList',
            category__pb2.CategoryInfoRequest.SerializeToString,
            brand__pb2.BrandListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateCategoryBrand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Brand/CreateCategoryBrand',
            brand__pb2.CategoryBrandRequest.SerializeToString,
            brand__pb2.CategoryBrandResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteCategoryBrand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Brand/DeleteCategoryBrand',
            brand__pb2.CategoryBrandRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCategoryBrand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Brand/UpdateCategoryBrand',
            brand__pb2.CategoryBrandRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
