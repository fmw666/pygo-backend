// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.20.1
// source: userfavorite.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	UserFavorite_GetUserFavoriteList_FullMethodName   = "/UserFavorite/GetUserFavoriteList"
	UserFavorite_GetUserFavoriteDetail_FullMethodName = "/UserFavorite/GetUserFavoriteDetail"
	UserFavorite_CreateUserFavorite_FullMethodName    = "/UserFavorite/CreateUserFavorite"
	UserFavorite_DeleteUserFavorite_FullMethodName    = "/UserFavorite/DeleteUserFavorite"
)

// UserFavoriteClient is the client API for UserFavorite service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UserFavoriteClient interface {
	GetUserFavoriteList(ctx context.Context, in *UserFavoriteRequest, opts ...grpc.CallOption) (*UserFavoriteListResponse, error)
	GetUserFavoriteDetail(ctx context.Context, in *UserFavoriteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	CreateUserFavorite(ctx context.Context, in *UserFavoriteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DeleteUserFavorite(ctx context.Context, in *UserFavoriteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type userFavoriteClient struct {
	cc grpc.ClientConnInterface
}

func NewUserFavoriteClient(cc grpc.ClientConnInterface) UserFavoriteClient {
	return &userFavoriteClient{cc}
}

func (c *userFavoriteClient) GetUserFavoriteList(ctx context.Context, in *UserFavoriteRequest, opts ...grpc.CallOption) (*UserFavoriteListResponse, error) {
	out := new(UserFavoriteListResponse)
	err := c.cc.Invoke(ctx, UserFavorite_GetUserFavoriteList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userFavoriteClient) GetUserFavoriteDetail(ctx context.Context, in *UserFavoriteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, UserFavorite_GetUserFavoriteDetail_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userFavoriteClient) CreateUserFavorite(ctx context.Context, in *UserFavoriteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, UserFavorite_CreateUserFavorite_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userFavoriteClient) DeleteUserFavorite(ctx context.Context, in *UserFavoriteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, UserFavorite_DeleteUserFavorite_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserFavoriteServer is the server API for UserFavorite service.
// All implementations must embed UnimplementedUserFavoriteServer
// for forward compatibility
type UserFavoriteServer interface {
	GetUserFavoriteList(context.Context, *UserFavoriteRequest) (*UserFavoriteListResponse, error)
	GetUserFavoriteDetail(context.Context, *UserFavoriteRequest) (*emptypb.Empty, error)
	CreateUserFavorite(context.Context, *UserFavoriteRequest) (*emptypb.Empty, error)
	DeleteUserFavorite(context.Context, *UserFavoriteRequest) (*emptypb.Empty, error)
	mustEmbedUnimplementedUserFavoriteServer()
}

// UnimplementedUserFavoriteServer must be embedded to have forward compatible implementations.
type UnimplementedUserFavoriteServer struct {
}

func (UnimplementedUserFavoriteServer) GetUserFavoriteList(context.Context, *UserFavoriteRequest) (*UserFavoriteListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserFavoriteList not implemented")
}
func (UnimplementedUserFavoriteServer) GetUserFavoriteDetail(context.Context, *UserFavoriteRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserFavoriteDetail not implemented")
}
func (UnimplementedUserFavoriteServer) CreateUserFavorite(context.Context, *UserFavoriteRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUserFavorite not implemented")
}
func (UnimplementedUserFavoriteServer) DeleteUserFavorite(context.Context, *UserFavoriteRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUserFavorite not implemented")
}
func (UnimplementedUserFavoriteServer) mustEmbedUnimplementedUserFavoriteServer() {}

// UnsafeUserFavoriteServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UserFavoriteServer will
// result in compilation errors.
type UnsafeUserFavoriteServer interface {
	mustEmbedUnimplementedUserFavoriteServer()
}

func RegisterUserFavoriteServer(s grpc.ServiceRegistrar, srv UserFavoriteServer) {
	s.RegisterService(&UserFavorite_ServiceDesc, srv)
}

func _UserFavorite_GetUserFavoriteList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFavoriteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserFavoriteServer).GetUserFavoriteList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserFavorite_GetUserFavoriteList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserFavoriteServer).GetUserFavoriteList(ctx, req.(*UserFavoriteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserFavorite_GetUserFavoriteDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFavoriteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserFavoriteServer).GetUserFavoriteDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserFavorite_GetUserFavoriteDetail_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserFavoriteServer).GetUserFavoriteDetail(ctx, req.(*UserFavoriteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserFavorite_CreateUserFavorite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFavoriteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserFavoriteServer).CreateUserFavorite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserFavorite_CreateUserFavorite_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserFavoriteServer).CreateUserFavorite(ctx, req.(*UserFavoriteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserFavorite_DeleteUserFavorite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFavoriteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserFavoriteServer).DeleteUserFavorite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserFavorite_DeleteUserFavorite_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserFavoriteServer).DeleteUserFavorite(ctx, req.(*UserFavoriteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// UserFavorite_ServiceDesc is the grpc.ServiceDesc for UserFavorite service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var UserFavorite_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "UserFavorite",
	HandlerType: (*UserFavoriteServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserFavoriteList",
			Handler:    _UserFavorite_GetUserFavoriteList_Handler,
		},
		{
			MethodName: "GetUserFavoriteDetail",
			Handler:    _UserFavorite_GetUserFavoriteDetail_Handler,
		},
		{
			MethodName: "CreateUserFavorite",
			Handler:    _UserFavorite_CreateUserFavorite_Handler,
		},
		{
			MethodName: "DeleteUserFavorite",
			Handler:    _UserFavorite_DeleteUserFavorite_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "userfavorite.proto",
}
